/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../common";
import type { ERT, ERTInterface } from "../../../contracts/ERT.sol/ERT";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "global_collateral_ratio",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "b_address",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "b_amount",
        type: "uint256",
      },
    ],
    name: "pool_burn_from",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "pool_mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040518060400160405280600a81526020017f45524332302054657374000000000000000000000000000000000000000000008152506040518060400160405280600381526020017f455254000000000000000000000000000000000000000000000000000000000081525081600390816200008f919062000340565b508060049081620000a1919062000340565b506012600560006101000a81548160ff021916908360ff160217905550505062000427565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806200014857607f821691505b6020821081036200015e576200015d62000100565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302620001c87fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8262000189565b620001d4868362000189565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b6000620002216200021b6200021584620001ec565b620001f6565b620001ec565b9050919050565b6000819050919050565b6200023d8362000200565b620002556200024c8262000228565b84845462000196565b825550505050565b600090565b6200026c6200025d565b6200027981848462000232565b505050565b5b81811015620002a1576200029560008262000262565b6001810190506200027f565b5050565b601f821115620002f057620002ba8162000164565b620002c58462000179565b81016020851015620002d5578190505b620002ed620002e48562000179565b8301826200027e565b50505b505050565b600082821c905092915050565b60006200031560001984600802620002f5565b1980831691505092915050565b600062000330838362000302565b9150826002028217905092915050565b6200034b82620000c6565b67ffffffffffffffff811115620003675762000366620000d1565b5b6200037382546200012f565b62000380828285620002a5565b600060209050601f831160018114620003b85760008415620003a3578287015190505b620003af858262000322565b8655506200041f565b601f198416620003c88662000164565b60005b82811015620003f257848901518255600182019150602085019450602081019050620003cb565b868310156200041257848901516200040e601f89168262000302565b8355505b6001600288020188555050505b505050505050565b61191780620004376000396000f3fe608060405234801561001057600080fd5b50600436106100f55760003560e01c806340c10f1911610097578063a8a778ae11610066578063a8a778ae1461029c578063a9059cbb146102b8578063b4f56b26146102e8578063dd62ed3e14610304576100f5565b806340c10f191461020257806370a082311461021e57806395d89b411461024e578063a457c2d71461026c576100f5565b806323b872dd116100d357806323b872dd146101665780632eb9771b14610196578063313ce567146101b457806339509351146101d2576100f5565b806306fdde03146100fa578063095ea7b31461011857806318160ddd14610148575b600080fd5b610102610334565b60405161010f9190611151565b60405180910390f35b610132600480360381019061012d919061120c565b6103c6565b60405161013f9190611267565b60405180910390f35b6101506103e4565b60405161015d9190611291565b60405180910390f35b610180600480360381019061017b91906112ac565b6103ee565b60405161018d9190611267565b60405180910390f35b61019e6104c7565b6040516101ab9190611291565b60405180910390f35b6101bc6104cc565b6040516101c9919061131b565b60405180910390f35b6101ec60048036038101906101e7919061120c565b6104e3565b6040516101f99190611267565b60405180910390f35b61021c6004803603810190610217919061120c565b610596565b005b61023860048036038101906102339190611336565b6105a4565b6040516102459190611291565b60405180910390f35b6102566105ec565b6040516102639190611151565b60405180910390f35b6102866004803603810190610281919061120c565b61067e565b6040516102939190611267565b60405180910390f35b6102b660048036038101906102b1919061120c565b61074b565b005b6102d260048036038101906102cd919061120c565b610759565b6040516102df9190611267565b60405180910390f35b61030260048036038101906102fd919061120c565b610777565b005b61031e60048036038101906103199190611363565b610785565b60405161032b9190611291565b60405180910390f35b606060038054610343906113d2565b80601f016020809104026020016040519081016040528092919081815260200182805461036f906113d2565b80156103bc5780601f10610391576101008083540402835291602001916103bc565b820191906000526020600020905b81548152906001019060200180831161039f57829003601f168201915b5050505050905090565b60006103da6103d361080c565b8484610814565b6001905092915050565b6000600254905090565b60006103fb8484846109dd565b6104bc8461040761080c565b6104b78560405180606001604052806028815260200161189560289139600160008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600061046d61080c565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610c709092919063ffffffff16565b610814565b600190509392505050565b600090565b6000600560009054906101000a900460ff16905090565b600061058c6104f061080c565b84610587856001600061050161080c565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610cd490919063ffffffff16565b610814565b6001905092915050565b6105a08282610d32565b5050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6060600480546105fb906113d2565b80601f0160208091040260200160405190810160405280929190818152602001828054610627906113d2565b80156106745780601f1061064957610100808354040283529160200191610674565b820191906000526020600020905b81548152906001019060200180831161065757829003601f168201915b5050505050905090565b600061074161068b61080c565b8461073c856040518060600160405280602581526020016118bd60259139600160006106b561080c565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610c709092919063ffffffff16565b610814565b6001905092915050565b6107558282610ec5565b5050565b600061076d61076661080c565b84846109dd565b6001905092915050565b6107818282610d32565b5050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610883576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161087a90611475565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036108f2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108e990611507565b60405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040516109d09190611291565b60405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610a4c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a4390611599565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610abb576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ab29061162b565b60405180910390fd5b610ac6838383611072565b610b318160405180606001604052806026815260200161186f602691396000808773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610c709092919063ffffffff16565b6000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610bc4816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610cd490919063ffffffff16565b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610c639190611291565b60405180910390a3505050565b6000838311158290610cb8576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610caf9190611151565b60405180910390fd5b5060008385610cc7919061167a565b9050809150509392505050565b6000808284610ce391906116ae565b905083811015610d28576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d1f9061172e565b60405180910390fd5b8091505092915050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610da1576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d989061179a565b60405180910390fd5b610dad60008383611072565b610dc281600254610cd490919063ffffffff16565b600281905550610e19816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610cd490919063ffffffff16565b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610eb99190611291565b60405180910390a35050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610f34576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f2b9061182c565b60405180910390fd5b610f4082600083611072565b610fab8160405180606001604052806022815260200161184d602291396000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610c709092919063ffffffff16565b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506110028160025461107790919063ffffffff16565b600281905550600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040516110669190611291565b60405180910390a35050565b505050565b60006110b983836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250610c70565b905092915050565b600081519050919050565b600082825260208201905092915050565b60005b838110156110fb5780820151818401526020810190506110e0565b60008484015250505050565b6000601f19601f8301169050919050565b6000611123826110c1565b61112d81856110cc565b935061113d8185602086016110dd565b61114681611107565b840191505092915050565b6000602082019050818103600083015261116b8184611118565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006111a382611178565b9050919050565b6111b381611198565b81146111be57600080fd5b50565b6000813590506111d0816111aa565b92915050565b6000819050919050565b6111e9816111d6565b81146111f457600080fd5b50565b600081359050611206816111e0565b92915050565b6000806040838503121561122357611222611173565b5b6000611231858286016111c1565b9250506020611242858286016111f7565b9150509250929050565b60008115159050919050565b6112618161124c565b82525050565b600060208201905061127c6000830184611258565b92915050565b61128b816111d6565b82525050565b60006020820190506112a66000830184611282565b92915050565b6000806000606084860312156112c5576112c4611173565b5b60006112d3868287016111c1565b93505060206112e4868287016111c1565b92505060406112f5868287016111f7565b9150509250925092565b600060ff82169050919050565b611315816112ff565b82525050565b6000602082019050611330600083018461130c565b92915050565b60006020828403121561134c5761134b611173565b5b600061135a848285016111c1565b91505092915050565b6000806040838503121561137a57611379611173565b5b6000611388858286016111c1565b9250506020611399858286016111c1565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806113ea57607f821691505b6020821081036113fd576113fc6113a3565b5b50919050565b7f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b600061145f6024836110cc565b915061146a82611403565b604082019050919050565b6000602082019050818103600083015261148e81611452565b9050919050565b7f45524332303a20617070726f766520746f20746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b60006114f16022836110cc565b91506114fc82611495565b604082019050919050565b60006020820190508181036000830152611520816114e4565b9050919050565b7f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b60006115836025836110cc565b915061158e82611527565b604082019050919050565b600060208201905081810360008301526115b281611576565b9050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b60006116156023836110cc565b9150611620826115b9565b604082019050919050565b6000602082019050818103600083015261164481611608565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000611685826111d6565b9150611690836111d6565b92508282039050818111156116a8576116a761164b565b5b92915050565b60006116b9826111d6565b91506116c4836111d6565b92508282019050808211156116dc576116db61164b565b5b92915050565b7f536166654d6174683a206164646974696f6e206f766572666c6f770000000000600082015250565b6000611718601b836110cc565b9150611723826116e2565b602082019050919050565b600060208201905081810360008301526117478161170b565b9050919050565b7f45524332303a206d696e7420746f20746865207a65726f206164647265737300600082015250565b6000611784601f836110cc565b915061178f8261174e565b602082019050919050565b600060208201905081810360008301526117b381611777565b9050919050565b7f45524332303a206275726e2066726f6d20746865207a65726f2061646472657360008201527f7300000000000000000000000000000000000000000000000000000000000000602082015250565b60006118166021836110cc565b9150611821826117ba565b604082019050919050565b6000602082019050818103600083015261184581611809565b905091905056fe45524332303a206275726e20616d6f756e7420657863656564732062616c616e636545524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e636545524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636545524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa2646970667358221220476aed1f5a1abe93005d83c0dce273492daf4865beac782d57fa2ed3e4e457b364736f6c63430008110033";

type ERTConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERTConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERT__factory extends ContractFactory {
  constructor(...args: ERTConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ERT> {
    return super.deploy(overrides || {}) as Promise<ERT>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): ERT {
    return super.attach(address) as ERT;
  }
  override connect(signer: Signer): ERT__factory {
    return super.connect(signer) as ERT__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERTInterface {
    return new utils.Interface(_abi) as ERTInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): ERT {
    return new Contract(address, _abi, signerOrProvider) as ERT;
  }
}
